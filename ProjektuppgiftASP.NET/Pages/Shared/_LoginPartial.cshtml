@using Microsoft.AspNetCore.Identity
@using ProjektuppgiftASP.NET.Models;
@inject SignInManager<MyUser> SignInManager
@inject UserManager<MyUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        MyUser user = await UserManager.GetUserAsync(User);
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> @User.Identity.Name</a>
        </li>

        @if (User.IsInRole("Admin"))
        {
/*
             <li class="nav-item">
                 <a class="btn btn-danger" asp-page="/Admin/ManageUsers">Manage Users</a>
             </li>  Knapp för admin-sidan*/

        }
        @if (User.IsInRole("Organizer"))
        {

            <li class="nav-item">
                <a class="btn btn-success" asp-page="/Organizer/OrganizeEvents">Organize Events</a>
            </li>
            <li class="nav-item">
                <a class="btn btn-success" asp-page="/Organizer/AddEvent">Add Event</a>
            </li>


        }

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }

    else
    {

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
